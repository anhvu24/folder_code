<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-01-27T10:34:16 ICT" name="Script1" finished-at="2022-01-27T10:35:00 ICT" duration-ms="43688">
    <groups>
    </groups>
    <test started-at="2022-01-27T10:34:16 ICT" name="Admin change price while User making order" finished-at="2022-01-27T10:34:51 ICT" duration-ms="34575">
      <class name="test.script1.UserMakeOrderTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.script1.UserMakeOrderTest@470734c3]" started-at="2022-01-27T10:34:16 ICT" name="setup" finished-at="2022-01-27T10:34:22 ICT" duration-ms="5881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginCustomerRole()[pri:1, instance:test.script1.UserMakeOrderTest@470734c3]" started-at="2022-01-27T10:34:22 ICT" name="loginCustomerRole" finished-at="2022-01-27T10:34:25 ICT" duration-ms="2845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginCustomerRole -->
        <test-method signature="searchProductByTool()[pri:2, instance:test.script1.UserMakeOrderTest@470734c3]" started-at="2022-01-27T10:34:25 ICT" name="searchProductByTool" finished-at="2022-01-27T10:34:28 ICT" depends-on-methods="test.script1.UserMakeOrderTest.loginCustomerRole" duration-ms="3625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchProductByTool -->
        <test-method signature="checkPriceBeforeMakeOrder()[pri:3, instance:test.script1.UserMakeOrderTest@470734c3]" started-at="2022-01-27T10:34:28 ICT" name="checkPriceBeforeMakeOrder" finished-at="2022-01-27T10:34:41 ICT" depends-on-methods="test.script1.UserMakeOrderTest.searchProductByTool" duration-ms="12454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPriceBeforeMakeOrder -->
        <test-method signature="makeOrderWithSearchProduct()[pri:4, instance:test.script1.UserMakeOrderTest@470734c3]" started-at="2022-01-27T10:34:41 ICT" name="makeOrderWithSearchProduct" finished-at="2022-01-27T10:34:50 ICT" depends-on-methods="test.script1.UserMakeOrderTest.checkPriceBeforeMakeOrder" duration-ms="8854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- makeOrderWithSearchProduct -->
        <test-method is-config="true" signature="quit()[pri:0, instance:test.script1.UserMakeOrderTest@470734c3]" started-at="2022-01-27T10:34:50 ICT" name="quit" finished-at="2022-01-27T10:34:51 ICT" duration-ms="856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- test.script1.UserMakeOrderTest -->
      <class name="test.script1.AdminEditPriceTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.script1.AdminEditPriceTest@54c5a2ff]" started-at="2022-01-27T10:34:16 ICT" name="setup" finished-at="2022-01-27T10:34:22 ICT" duration-ms="6231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithAdminRole()[pri:1, instance:test.script1.AdminEditPriceTest@54c5a2ff]" started-at="2022-01-27T10:34:22 ICT" name="loginWithAdminRole" description="Login by Admin account and move to Admin page" finished-at="2022-01-27T10:34:26 ICT" duration-ms="3890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithAdminRole -->
        <test-method signature="editPrice()[pri:2, instance:test.script1.AdminEditPriceTest@54c5a2ff]" started-at="2022-01-27T10:34:26 ICT" name="editPrice" description="Verify that user can edit product&#039;s price in Product page" finished-at="2022-01-27T10:34:34 ICT" duration-ms="7340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editPrice -->
        <test-method signature="checkPriceAfterEdit()[pri:3, instance:test.script1.AdminEditPriceTest@54c5a2ff]" started-at="2022-01-27T10:34:34 ICT" name="checkPriceAfterEdit" description="Verify that the price will display correctly in system after edit" finished-at="2022-01-27T10:34:36 ICT" duration-ms="2235" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.script1.AdminEditPriceTest.checkPriceAfterEdit(AdminEditPriceTest.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPriceAfterEdit -->
        <test-method is-config="true" signature="quit()[pri:0, instance:test.script1.AdminEditPriceTest@54c5a2ff]" started-at="2022-01-27T10:34:36 ICT" name="quit" finished-at="2022-01-27T10:34:36 ICT" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- test.script1.AdminEditPriceTest -->
    </test> <!-- Admin change price while User making order -->
    <test started-at="2022-01-27T10:34:51 ICT" name="Check price after order" finished-at="2022-01-27T10:35:00 ICT" duration-ms="9053">
      <class name="test.script1.AdminCheckOrderTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:test.script1.AdminCheckOrderTest@cc43f62]" started-at="2022-01-27T10:34:51 ICT" name="setup" finished-at="2022-01-27T10:34:53 ICT" duration-ms="2213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="checkPriceOfOrder()[pri:0, instance:test.script1.AdminCheckOrderTest@cc43f62]" started-at="2022-01-27T10:34:53 ICT" name="checkPriceOfOrder" description="Check the price of order is equals price before edit or after edit" finished-at="2022-01-27T10:34:59 ICT" duration-ms="6201" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.script1.AdminCheckOrderTest.checkPriceOfOrder(AdminCheckOrderTest.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkPriceOfOrder -->
        <test-method is-config="true" signature="quit()[pri:0, instance:test.script1.AdminCheckOrderTest@cc43f62]" started-at="2022-01-27T10:34:59 ICT" name="quit" finished-at="2022-01-27T10:35:00 ICT" duration-ms="631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- test.script1.AdminCheckOrderTest -->
    </test> <!-- Check price after order -->
  </suite> <!-- Script1 -->
</testng-results>
